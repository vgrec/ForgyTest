/*
 * Copyright 2022 Roberto Leinardi.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'forlago.android-android-conventions'
    id 'org.gradle.android.cache-fix'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.mikepenz.aboutlibraries.plugin'
    id 'forlago.merged-manifests-conventions'
    id 'forlago.dependencies-conventions'
    id 'com.starter.easylauncher'
}

def applyGsmServicesPlugins = rootProject.file("app/google-services.json").exists()
if (applyGsmServicesPlugins) {
    project.plugins.apply('com.google.gms.google-services')
    project.plugins.apply('com.google.firebase.crashlytics')
}
println "google-services.json ${if (applyGsmServicesPlugins) "" else "NOT "}found!"

android {
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidx.compose.get()
    }
}

easylauncher {
    buildTypes {
        debug {
            filters = [
                chromeLike(label: "DEBUG", overlayHeight: 0.35, textSizeRatio: 0.20),
            ]
        }
    }
}

dependencies {

    // Android
    implementation libs.androidx.activity.compose
    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui.ktx

    // General
    implementation libs.hilt.android
    implementation libs.hilt.navigation.compose
    kapt libs.hilt.compiler
    implementation libs.timber
    debugImplementation libs.leakcanary

    // Modules
    implementation project(':modules:core-android')
    implementation project(':modules:core-i18n')
    implementation project(':modules:core-logging')
    implementation project(':modules:core-ui')

}

tasks.register("installGitHooks", Copy) {
    from file("$rootDir/.githooks")
    into file("$rootDir/.git/hooks")
    fileMode 0775
}

afterEvaluate {
    preBuild.dependsOn installGitHooks
}
