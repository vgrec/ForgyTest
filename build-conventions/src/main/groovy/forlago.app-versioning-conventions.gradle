/*
 * Copyright 2022 Roberto Leinardi.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import io.github.reactivecircus.appversioning.SemVer

plugins {
    id 'io.github.reactivecircus.app-versioning'
}


appVersioning {
    overrideVersionCode { gitTag, providers, variantInfo ->
        def semVer = SemVer.fromGitTag(gitTag)
        def version = semVer.major * 10000 + semVer.minor * 100 + semVer.patch
        int versionLength = (Math.log10(version) + 1).intValue()
        def epoch = Instant.now().epochSecond.intValue()
        epoch -= epoch % Math.pow(10, versionLength).intValue()
        // Adding the epoch to the semantic version should help releasing hot fixes for older versions when a new version is already uploaded to the
        // to some Play Store track (e.g. the hot fix is needed for 1.04.0 on the production track but 1.05.0 was already uploaded to the beta track).
        version + epoch
    }
    overrideVersionName { gitTag, providers, variantInfo ->
        "${gitTag.rawTagName}${if (variantInfo.buildType == "debug") "-dev" else ""} (${gitTag.commitHash})".toString()
    }
}
